
Here are responses to some common Composer on BOA related questions.

The only documentation source for anything Aegir on BOA related is available at:

    https://learn.omega8.cc
    https://github.com/omega8cc/boa/issues?utf8=âœ“&q=is%3Aissue+composer

You may also benefit from checking some modified Composer based distros modified
to work with BOA:

     https://github.com/yaazkal/BOA-drupal-project
     https://github.com/yaazkal/BOA-lightning-project
     https://github.com/yaazkal/BOA-commerce-project

BOA supports Drupal 8 codebases both with classic directory structure like used
in Drupal 7 and also Drupal 8 distros you can download from Drupal.org, but
if you use Composer based codebase with different structure, the platform path
is not the codebase root directory, but the subdirectory where you see the
index.php and "core" subdirectory. It can be platform-name/web or
platform-name/docroot or something similar depending on the distro design.

As you have probably discovered if you have already tried, the path you should
use in Aegir when adding Composer based codebase as a platform is the directory
where index.php resides, so effectively anything above that directory is not
available for web requests and thus safely protected.

The information from Aegir project docs saying "When verifying a platform,
Aegir runs composer install if a composer.json file is found." doesn't apply
to BOA. We have disabled this. There are several reasons, most importantly:

a/ having this feature enabled is actually against the codebase management
workflow in Aegir, because it may modify codebase on a live site,

b/ some tasks launch verify many times during clone and migrate, which
results with giant overhead and conflicts if we allowed it to run composer
install many times in parallel,

c/ from our experience, having this poorly implemented feature enabled breaks
clone and migration tasks between platforms when both have the composer.json
file. It just doesn't make any sense no matter how to slice that.

You should think about Composer like it was Drush Make replacement, and you
should not re-build the codebase on a platform with sites already hosted.
Just use it to build new codebases and then add them as platforms when the build
works without errors.

Remember that Drush must be removed from the codebase, or it will take over
Aegir tasks and they will fail, because Aegir requires Drush 8 and will not work
with Drush 9. It shouldn't be a problem, though, because currently we don't
offer the ability to run composer install on every platform verify task, and
we don't include the interface to create Composer based platforms like it's
possible with Drush makefiles, although it will be included soon:

     https://www.drupal.org/project/hosting_deploy

Example: https://github.com/yaazkal/BOA-drupal-project/commit/691822e7c1d792e3ba28c6a1cdb283e30364e28a

Update: Since BOA-4.0.0 our modified Aegir backend will automatically
check and remove drush from the vendor directory if found, on every Verify.

You can modify the default path to configuration files in the site's
local.settings.php file. We are looking into making it easier to configure,
preferably with site level INI files which are easier to edit safely.
Just define your custom path in local.settings.php overriding the default:

     $config_directories[CONFIG_SYNC_DIRECTORY] = 'sites/sitename/private/config/sync';

Please check also the official docs at:

     https://www.drupal.org/docs/8/configuration-management/changing-the-storage-location-of-the-sync-directory

Please submit questions, suggestions and patches to improve the docs
in our issue queue at:

     https://github.com/omega8cc/boa/issues
